version: '3.8'

services:
  web:
    build: 
      context: .
      target: production
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/omarchy_directory_production
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - APP_HOST=${APP_HOST:-omarchy.app}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - app_logs:/app/log
      - app_tmp:/app/tmp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: >
      sh -c "
        bundle exec rails db:migrate &&
        bundle exec rails assets:precompile &&
        bundle exec rails server -b 0.0.0.0 -p 3000 -e production
      "

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=omarchy_directory_production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "6379:6379"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./public:/var/www/public:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      web:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/omarchy/postgres_data
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/omarchy/redis_data
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/omarchy/app_logs
  app_tmp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/omarchy/app_tmp
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/omarchy/nginx_logs

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
